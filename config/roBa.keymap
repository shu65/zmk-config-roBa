#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/pointing.h>

#define MOUSE 4
#define SCROLL 5
#define NUM 6

&mt {
    flavor = "balanced";
    quick-tap-ms = <0>;
};

/ {
    combos {
        compatible = "zmk,combos";

        shift_tab {
            bindings = <&kp TAB>;
            key-positions = <0 1>;
        };

        double_quotation {
            bindings = <&kp SQT>;
            key-positions = <20 21>;
        };

        BS {
            bindings = <&kp BSPC>;
            key-positions = <8 9>;
        };

        BackSlash {
            bindings = <&kp NON_US_BACKSLASH>;
            key-positions = <38 21 20>;
        };

        Grave {
            bindings = <&kp GRAVE>;
            key-positions = <33 32 38>;
        };
    };

    macros {
        to_layer_0: to_layer_0 {
            compatible = "zmk,behavior-macro-one-param";
            #binding-cells = <1>;
            bindings = <&to 0 &macro_param_1to1 &kp MACRO_PLACEHOLDER>;
            label = "TO_LAYER_0";
        };
    };

    behaviors {
        lt_to_layer_0: lt_to_layer_0 {
            compatible = "zmk,behavior-hold-tap";
            label = "LAYER_TAP_TO_0";
            bindings = <&mo>, <&to_layer_0>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
&kp Q             &kp W         &kp E         &kp R                      &kp T                                                            &kp Y               &kp U  &kp I      &kp O    &kp P
&mt LCTRL A       &kp S         &kp D         &kp F                      &kp G        &kp LS(LG(S))                    &kp MINUS          &kp H               &kp J  &kp K      &lt 5 L  &mt LEFT_CONTROL SEMICOLON
&mt LEFT_SHIFT Z  &kp X         &kp C         &kp V                      &kp B        &kp LEFT_BRACKET                 &kp RIGHT_BRACKET  &kp N               &kp M  &kp COMMA  &kp DOT  &mt LSHIFT SLASH
&kp LCTRL         &kp LEFT_WIN  &kp LEFT_ALT  &lt_to_layer_0 5 LEFT_WIN  &lt 2 SPACE  &lt_to_layer_0 1 LANGUAGE_2      &kp LANGUAGE_1     &mt LEFT_ALT ENTER                             &kp ESCAPE
            >;

            sensor-bindings = <&inc_dec_kp PAGE_UP PAGE_DOWN>;
        };

        NUMBER_FUNCTION_ARROW {
            bindings = <
&kp NUMBER_1       &kp NUMBER_2  &kp NUMBER_3  &kp NUMBER_4  &kp N5                        &kp NUMBER_6  &kp N7   &kp N8          &kp N9          &kp N0
&mt LCTRL F1       &kp F2        &kp F3        &kp F4        &kp F5   &trans      &kp F13  &kp F11       &kp F12  &kp F13         &kp UP_ARROW    &mt LCTRL BSPC
&mt LEFT_SHIFT F6  &kp F7        &kp F8        &kp F9        &kp F10  &trans      &trans   &trans        &trans   &kp LEFT_ARROW  &kp DOWN_ARROW  &kp RIGHT_ARROW
&trans             &trans        &trans        &trans        &trans   &trans      &trans   &trans                                                 &kp F12
            >;
        };

        SYMBOL {
            bindings = <
&kp LS(NUMBER_1)  &kp LS(NUMBER_2)  &kp LS(NUMBER_3)  &kp LS(NUMBER_4)  &kp LS(NUMBER_5)                                               &kp LS(NUMBER_6)  &kp LS(NUMBER_7)   &kp LS(NUMBER_8)  &kp LS(N9)         &kp LS(NUMBER_0)
&kp LCTRL         &kp KP_NUMBER_4   &kp KP_NUMBER_5   &kp KP_NUMBER_6   &kp ASTERISK      &kp LC(LA(KP_NUMBER_0))      &kp UNDERSCORE  &kp MINUS         &kp EQUAL          &kp LEFT_BRACKET  &kp RIGHT_BRACKET  &mt LS(LCTRL) DEL
&kp LEFT_SHIFT    &kp KP_NUMBER_1   &kp KP_NUMBER_2   &kp KP_NUMBER_3   &kp PERIOD        &kp EQUAL                    &trans          &kp LEFT_BRACKET  &kp RIGHT_BRACKET  &kp LEFT_BRACE    &kp RIGHT_BRACE    &mt LSHFT NON_US_BACKSLASH
&trans            &trans            &trans            &trans            &trans            &trans                       &trans          &trans                                                                    &kp PIPE
            >;
        };

        ARROW {
            bindings = <
&kp ESCAPE      &kp LC(LS(TAB))         &kp UP_ARROW    &kp LC(TAB)              &trans                       &trans  &trans  &trans  &trans  &trans
&kp HOME        &kp LEFT_ARROW          &kp DOWN_ARROW  &kp RIGHT_ARROW          &kp END  &trans      &trans  &trans  &trans  &trans  &trans  &trans
&kp LEFT_SHIFT  &kp LG(LS(LEFT_ARROW))  &trans          &kp LG(LS(RIGHT_ARROW))  &trans   &trans      &trans  &trans  &trans  &trans  &trans  &trans
&trans          &trans                  &trans          &trans                   &trans   &trans      &trans  &trans                          &trans
            >;

            sensor-bindings = <&inc_dec_kp LC(PAGE_UP) LC(PAGE_DOWN)>;
        };

        MOUSE {
            bindings = <
&trans  &trans  &trans  &trans  &trans                      &trans    &trans    &trans    &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &mkp MB3  &mkp MB1  &mkp MB2  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans    &trans    &trans    &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans                                &trans
            >;
        };

        SCROLL {
            bindings = <
&trans  &trans  &trans  &trans  &trans                      &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans                          &trans
            >;
        };

        layer_6 {
            bindings = <
&trans  &trans        &trans        &trans        &trans                           &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4
&trans  &trans        &trans        &trans        &trans  &trans      &trans       &trans        &trans        &trans        &trans        &trans
&trans  &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &trans  &trans      &bootloader  &trans        &trans        &trans        &trans        &bt BT_CLR
&trans  &trans        &trans        &trans        &trans  &trans      &trans       &trans                                                  &bt BT_CLR_ALL
            >;
        };
    };
};
